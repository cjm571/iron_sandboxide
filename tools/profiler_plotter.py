""" " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "
Filename : tools/metrics_receiver.rs

Copyright (C) 2020 CJ McAllister
    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 3 of the License, or
    (at your option) any later version.
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software Foundation,
    Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA

Purpose: 
    This file is used to parse the large CSV files generated by the
    SandCasting performance profiler.

" " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " """

import matplotlib.pyplot as plt
import numpy as np
import csv
import sys

if __name__ == "__main__":
    #TODO: Sanity-check CLI args
    
    # Retrieve data from csv
    timestamps1 = []
    values1 = []

    with open(str(sys.argv[1])) as csvDataFile:
        csvReader = csv.reader(csvDataFile, delimiter=';')
        for row in csvReader:
            for data_tuple in row:
                # Break once we encounter an empty column
                if data_tuple == '':
                    break

                # Split data tuples on ','
                (timestamp, value) = data_tuple.split(',')

                # Determine data type and cast accordingly
                if '.' in value:
                    values1.append(float(value))
                else:
                    values1.append(int(value))

                timestamps1.append(float(timestamp))
    
    # Retrieve data from csv
    timestamps2 = []
    values2 = []

    with open(str(sys.argv[2])) as csvDataFile:
        csvReader = csv.reader(csvDataFile, delimiter=';')
        for row in csvReader:
            for data_tuple in row:
                # Break once we encounter an empty column
                if data_tuple == '':
                    break

                # Split data tuples on ','
                (timestamp, value) = data_tuple.split(',')

                # Determine data type and cast accordingly
                if '.' in value:
                    values2.append(float(value))
                else:
                    values2.append(int(value))

                timestamps2.append(float(timestamp))

    #TODO: Set axes scale/max based on retrieved data

    #TODO: Set labels

    #TODO: Set axis scales

    # Compose and display chart
    fig, ax1 = plt.subplots()

    color = 'tab:blue'
    ax1.set_xlabel('time (ms)')
    ax1.set_ylabel('Avg FPS', color=color)
    ax1.bar(timestamps1, values1, color=color)

    ax2 = ax1.twinx()
    color = 'tab:red'
    ax2.set_ylabel('Frame Delta', color=color)
    ax2.bar(timestamps2, values2, color=color)

    # plt.bar(timestamps2, values2, color='red')

    fig.tight_layout()
    plt.show()